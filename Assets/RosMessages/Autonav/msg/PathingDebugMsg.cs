//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Autonav
{
    [Serializable]
    public class PathingDebugMsg : Message
    {
        public const string k_RosMessageName = "autonav_msgs/PathingDebug";
        public override string RosMessageName => k_RosMessageName;

        public double desired_heading = 0.0;
        public double desired_latitude = 0.0;
        public double desired_longitude = 0.0;
        public double distance_to_destination = 0.0;
        public double[] waypoints;
        public double time_until_use_waypoints = 0.0;

        public PathingDebugMsg()
        {
            this.waypoints = new double[0];
        }

        public PathingDebugMsg(double desired_heading, double desired_latitude, double desired_longitude, double distance_to_destination, double[] waypoints, double time_until_use_waypoints)
        {
            this.desired_heading = desired_heading;
            this.desired_latitude = desired_latitude;
            this.desired_longitude = desired_longitude;
            this.distance_to_destination = distance_to_destination;
            this.waypoints = waypoints;
            this.time_until_use_waypoints = time_until_use_waypoints;
        }

        public static PathingDebugMsg Deserialize(MessageDeserializer deserializer) => new PathingDebugMsg(deserializer);

        private PathingDebugMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.desired_heading);
            deserializer.Read(out this.desired_latitude);
            deserializer.Read(out this.desired_longitude);
            deserializer.Read(out this.distance_to_destination);
            deserializer.Read(out this.waypoints, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.time_until_use_waypoints);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.desired_heading);
            serializer.Write(this.desired_latitude);
            serializer.Write(this.desired_longitude);
            serializer.Write(this.distance_to_destination);
            serializer.WriteLength(this.waypoints);
            serializer.Write(this.waypoints);
            serializer.Write(this.time_until_use_waypoints);
        }

        public override string ToString()
        {
            return "PathingDebugMsg: " +
            "\ndesired_heading: " + desired_heading.ToString() +
            "\ndesired_latitude: " + desired_latitude.ToString() +
            "\ndesired_longitude: " + desired_longitude.ToString() +
            "\ndistance_to_destination: " + distance_to_destination.ToString() +
            "\nwaypoints: " + System.String.Join(", ", waypoints.ToList()) +
            "\ntime_until_use_waypoints: " + time_until_use_waypoints.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
